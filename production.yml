version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: todo_production_django
    platform: linux/x86_64
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: todo_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: todo_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      # - "0.0.0.0.:80:80"
      # - "0.0.0.0.:443:443"
      # In order to avoid port conflict with nginx, have Traefik listen on
      # localhost ports 801 and 4431 and have nginx route requests to those
      # ports. Be sure to include original headers:
      # location / {
      #   proxy_set_header Host       $host;
      #   proxy_pass                  https://127.0.0.1:4431; }
      - "127.0.0.1:801:80"
      - "127.0.0.1:4431:443"

  redis:
    image: redis:6

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z
